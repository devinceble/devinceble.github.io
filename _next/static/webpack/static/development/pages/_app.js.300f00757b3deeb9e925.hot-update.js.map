{"version":3,"file":"static/webpack/static/development/pages/_app.js.300f00757b3deeb9e925.hot-update.js","sources":["webpack:///./assets/styles/main.css?b63c","webpack:///./assets/styles/main.css","webpack:///./pages/_app.tsx"],"sourcesContent":["var content = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??__nextjs_postcss!./main.css\");\n\nif (typeof content === 'string') {\n  content = [[module.id, content, '']];\n}\n\nvar options = {}\n\noptions.insert = function(element){// These elements should always exist. If they do not,\n// this code should fail.\nvar anchorElement=document.querySelector('#__next_css__DO_NOT_USE__');var parentNode=anchorElement.parentNode;// Normally <head>\n// Each style tag should be placed right before our\n// anchor. By inserting before and not after, we do not\n// need to track the last inserted element.\nparentNode.insertBefore(element,anchorElement)// Remember: this is development only code.\n//\n// After styles are injected, we need to remove the\n// <style> tags that set `body { display: none; }`.\n//\n// We use `requestAnimationFrame` as a way to defer\n// this operation since there may be multiple style\n// tags.\n;(self.requestAnimationFrame||setTimeout)(function(){for(var x=document.querySelectorAll('[data-next-hide-fouc]'),i=x.length;i--;){x[i].parentNode.removeChild(x[i]);}});};\noptions.singleton = false;\n\nvar update = require(\"!../../node_modules/style-loader/dist/runtime/injectStylesIntoStyleTag.js\")(content, options);\n\nif (content.locals) {\n  module.exports = content.locals;\n}\n\nif (module.hot) {\n  if (!content.locals) {\n    module.hot.accept(\n      \"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??__nextjs_postcss!./main.css\",\n      function () {\n        var newContent = require(\"!!../../node_modules/css-loader/dist/cjs.js??ref--5-oneOf-5-1!../../node_modules/postcss-loader/src/index.js??__nextjs_postcss!./main.css\");\n\n        if (typeof newContent === 'string') {\n          newContent = [[module.id, newContent, '']];\n        }\n        \n        update(newContent);\n      }\n    )\n  }\n\n  module.hot.dispose(function() { \n    update();\n  });\n}","exports = module.exports = require(\"../../node_modules/css-loader/dist/runtime/api.js\")(true);\n// Module\nexports.push([module.id, \"html, body {\\n  margin: 16px;\\n}\\n\\n.container {\\n  margin-bottom: 16px;\\n}\\n\", \"\",{\"version\":3,\"sources\":[\"main.css\"],\"names\":[],\"mappings\":\"AAAA;EACE,YAAY;AACd;;AAEA;EACE,mBAAmB;AACrB\",\"file\":\"main.css\",\"sourcesContent\":[\"html, body {\\n  margin: 16px;\\n}\\n\\n.container {\\n  margin-bottom: 16px;\\n}\\n\"]}]);\n","import '../assets/styles/bootstrap-theme.min.css';\nimport '../assets/styles/bootstrap.min.css';\nimport '../assets/styles/main.css';\n\nimport App from 'next/app';\nimport Head from 'next/head';\nimport React from 'react';\n\nclass AppMain extends App {\n  static async getInitialProps({ Component, ctx }) {\n    let pageProps = {}\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx)\n    }\n\n    return { pageProps }\n  }\n\n  render() {\n    const { Component, pageProps } = this.props\n\n    return (\n      <>\n        <Head>\n          <title>vimwarrior.io</title>\n        </Head>\n        <Component {...pageProps} />\n      </>\n    );\n  }\n\n}\n\nexport default AppMain;\n"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;AClDA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAWA;AAAA;AAAA;AAAA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;AArBA;AACA;AACA;AACA;;;;;;AACA;AACA;;AADA;AACA;;AAEA;AAAA;AAAA;AACA;;;;;;;;;;;AATA;AACA;AAyBA;;;;A","sourceRoot":""}